input {
  file{
    path=>["/home/lishichen/filecsv/poi_sjqx_dr.csv"]
     #从每个文件的开头读取内容（每行也可以被称为事件）
    start_position => "beginning"
	#logstash默认不处理一天前的文件
	#ignore_older => 87400
	#sincedb_path => "/dev/null"
  }
}
# 处理/过滤部分 处理每一个事件（或叫作每一行内容）
filter{
    # 过滤的时候，先使用变异插件mutate去掉message字段内容中的换行符
    mutate{
      gsub=>[ "message", "\\N", "" ]
   }
   # 然后使用csv插件
   csv{
       # 指定事件中的message字段，是进行csv过滤操作时的字段
        source => "message"
        # 每行source/message中 不同字段 之间的分割符是什么
        separator => ","
        # 由于第一行不是csv头部，而是实际内容，所以不需要跳过开头
        skip_header => true
        # 可以理解为：使用分隔符分开后，对每个字段进行重命名
        columns => ["id","lng","lat","name","address","telephone","type","areaid","wgslng","wgslat","bdlng","bdlat","updatetime","city","province","county","city_code"]
        # 增加一个location字段
        add_field =>{"location"=>"%{lat},%{lng}"}
        add_field =>{"guid"=>"%{id}"}
        add_field =>{"countyCode"=>"%{areaid}"}
         # 删除不需要的字段
        remove_field => ["lng","lat","wgslng","wgslat","bdlng","bdlat","updatetime","message","areaid","host","@version","@timestamp","path"]
   }
}
# 输出部分 将事件中 剩余的字段 进行后处理
output{
    elasticsearch {
    #1. es集群的地址,也可以是nginx代理过得es集群地址的域名
    hosts => ["http://172.17.13.22:9688"]
    
    #2. 指定输出到哪个索引上，下面的值也可以换成动态的形式，
    #例如 index => "poi_%{city_code}",表示要将此条poi数据输出到，poi数据所属的城市对应的索引当中
    index => "poi_%{countyCode}"
    
    #3. 数据存储到ES后生成的文档id，由自己指定还是通过ES自动生成：若不指定，ES会自动生成一个uuid；若想执行指定，可参考上方的uuid插件生成一个
    document_id => "%{id}"
    
    #4. 数据放到索引下的哪个类型当中
    document_type=>"_doc"

    #5. 指定一份自定义的模板文件
    # 5.1 ES中存储的每一个文档可由多个字段构成的，而每个字段可以有不同的类型，例如geo_point、text、keyword类型等
    # 5.2 经过input、filter环节之后，每个事件都可以留下与ES文档字段相对应的几个字段
    # 5.3 在此自定义一份json模板，使得事件中的各字段按照模板中（：模板使用于哪些索引、索引的基本设置、字段的类型设置等）的设置导入到相应的索引中，并完成对文档中各个字段类型的设置
    # 启动自定义模板管理的方式
    manage_template => true
    # 如果ES中有相同名称的模板_setting，进行覆盖
    template_overwrite => true
    # 模板的位置
    template =>"/home/lishichen/filecsv/poi_sjqx.json"
    # 模板所自定义的名称
    template_name => "poi_sjqx"
	# ecs_compatibility=>disabled
  }
}
